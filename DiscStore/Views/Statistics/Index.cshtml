
@{
    ViewBag.Title = "View";

}

<h3>Orders By Genre</h3>
<div id="pie-chart-ordersByGenre"></div>
<h3>Discs By Genre</h3>
<div id="pie-chart-discsByGenre"></div>

@section Scripts {
    <script src="/Scripts/d3.v3.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var ordersByGenre, discsByGenre;
            $.getJSON("/Statistics/GetOrdersByGenre", (data) => {
                //$("#1").text(data.ordersCount + ":::" + data.Genres);
                ordersByGenre = data;
                initPie('#pie-chart-ordersByGenre', data.data);
            })
            $.getJSON("/Statistics/GetDiscsByGenre", (data) => {
                //$("#2").text(data. + ":::" + data.Genres);
                discsByGenre = data;
                initPie('#pie-chart-discsByGenre', data.data);
            })
        })
        function initPie(divSelector, data) {

            var w = 400,
                h = 400,
                r = Math.min(w, h) / 2,
                labelr = r + 30, // radius for label anchor
                color = d3.scale.category20(),
                donut = d3.layout.pie(),
                arc = d3.svg.arc().innerRadius(r * .6).outerRadius(r);

            var pathAnim = function (path, dir) {
                switch (dir) {
                    case 0:
                        path.transition()
                            .duration(500)
                            .ease('bounce')
                            .attr('d', d3.svg.arc()
                                .innerRadius(r - 50)
                                .outerRadius(r - 100)
                            );
                        break;

                    case 1:
                        path.transition()
                            .attr('d', d3.svg.arc()
                                .innerRadius((r - 50) * 1.1)
                                .outerRadius((r - 100))
                            );
                        break;
                }
            }

            var eventObj = {

                'mouseover': function (d, i, j) {
                    pathAnim(d3.select(this), 1);

                    var thisDonut = vis.select('.type' + j);
                    thisDonut.select('.value').text(function (donut_d) {
                        return d.data.val.toFixed(1) + donut_d.unit;
                    });
                    thisDonut.select('.percentage').text(function (donut_d) {
                        return (d.data.val / donut_d.total * 100).toFixed(2) + '%';
                    });
                },

                'mouseout': function (d, i, j) {
                    var thisPath = d3.select(this);
                    if (!thisPath.classed('clicked')) {
                        pathAnim(thisPath, 0);
                    }
                    var thisDonut = vis.select('.type' + j);
                }
            };



            var vis = d3.select(divSelector)
                .append("svg:svg")
                .data([data])
                .attr("width", w + 150)
                .attr("height", h);

            var arcs = vis.selectAll("g.arc")
                .data(donut.value(function (d) { return d.value }))
                .enter().append("svg:g")
                .attr("class", "arc")
                .attr("transform", "translate(" + (r + 30) + "," + r + ")");

            arcs.append("svg:path")
                .attr("fill", function (d, i) { return color(i); })
                .attr("d", arc)

            arcs.append("svg:text")
                .attr("transform", function (d) {
                    var c = arc.centroid(d),
                        x = c[0],
                        y = c[1],
                        // pythagorean theorem for hypotenuse
                        h = Math.sqrt(x * x + y * y);
                    return "translate(" + (x / h * labelr) + ',' +
                        (y / h * labelr) + ")";
                })
                .attr("dy", ".35em")
                .attr("text-anchor", function (d) {
                    // are we past the center?
                    return (d.endAngle + d.startAngle) / 2 > Math.PI ?
                        "end" : "start";
                })
                .text(function (d, i) { return d.value.toFixed(2) + '-' + d.data.name; });

            arcs.on(eventObj);

        }

    </script>
}

